@page
@using  Microsoft.Extensions.Configuration
@inject IConfiguration Configuration
@{
    ViewData["Title"] = "EasyAuth sample - with MobileServices SDK";
    var facebookAppId = Configuration["facebookAppId"];
    var googleClientId = Configuration["googleClientId"];
    var functionAppBaseUrl = Configuration["functionAppBaseUrl"];
    if (!functionAppBaseUrl.EndsWith("/"))
    {
        functionAppBaseUrl += "/";
    }
    var useFacebook = !string.IsNullOrEmpty(facebookAppId);
    var useGoogle = !string.IsNullOrEmpty(googleClientId);
}
@section Head {
    @if (useGoogle)
    {
    <meta name="google-signin-scope" content="profile email">
    <meta name="google-signin-client_id" content="@googleClientId">
    }
}
<h1>EasyAuth sample web client - using MobileServices JavaScript Client SDK</h1>

<h2>Sign in with:</h2>
@if (useFacebook)
{
<div class="login-provider">
    <h3>Facebook</h3>
    <div>
        <fb:login-button scope="public_profile,email"
                         auto-logout-link="true"
                         onlogin="onFacebookLogin();">
        </fb:login-button>
    </div>
</div>
}
@if (useGoogle)
{
<div class="login-provider">
    <h3>Google</h3>
    <div>
        @*<div class="g-signin2" data-onsuccess="onGoogleLogin"></div>*@
        <div id="my-signin2"></div>
        <a href="#" onclick="googleSignOut();">Sign out</a>
    </div>
</div>
}

<h2>Call Azure Functions:</h2>
The following actions call into our deployed Azure Functions:
<div>
    <button id="testIsAuthenticated">Test Authenticated</button>
    <button id="getClaims">Get Claims</button>
    <button id="getAuthInfo">Get Auth Info</button>
    <button id="getEmail">Get Email</button>
</div>


<h2>Call EasyAuth:</h2>
The following actions call into the EasyAuth endpoints:
<div>
    <button id="callAuthMe">.auth/me</button>
    <button id="callAuthLogout">.auth/logout</button>
</div>

<div>
    <h2>Log:</h2>
    <button id="clearLog">Clear</button>
    <div id="log"></div>
</div>


<script src="https://zumo.blob.core.windows.net/sdk/azure-mobile-apps-client.2.0.0.js"></script>
<script>
    var functionAppBaseUrl = '@functionAppBaseUrl';
    var mobileClient = new WindowsAzure.MobileServiceClient(functionAppBaseUrl);

    @if (useFacebook){
        @* Pull in the facebook JavaScript SDK: https://developers.facebook.com/docs/javascript/
        Other facebook SDKs: https://developers.facebook.com/docs/
        *@
        <text>
        window.fbAsyncInit = function () {
            FB.init({
                appId: '@facebookAppId',
                cookie: true,
                xfbml: true,
                version: 'v2.12'
            });
            onFacebookLogin();
        };
        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement(s); js.id = id;
            js.src = "https://connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
        function onFacebookLogin() {
            FB.getLoginStatus(function (response) {
                log(`In facebook callback: ${JSON.stringify(response)}`);
                if (response === undefined || response.status.toLowerCase() === 'connected') {
                    var accessToken = response.authResponse.accessToken;
                    mobileClient.login('facebook', { 'access_token': accessToken }, false)
                        .then(function () {
                            console.log('TODO - could enable/disable functionality etc')
                        }, function (error) {
                            console.log(`ERROR: ${error}`);
                        });
                } else {
                    // TODO - think about how to handle FB logout vs page load when logged out
                }
            });
        }
        </text>
    }
    @if (useGoogle)
    {
        @* docs: https://developers.google.com/identity/sign-in/web/build-button
            https://developers.google.com/identity/sign-in/web/reference
        *@
        <text>
        function renderButton()
        {
            gapi.signin2.render('my-signin2', {
                'scope': 'profile email',
                'width': 240,
                'height': 50,
                'longtitle': true,
                'theme': 'light',
                'onsuccess': onGoogleLogin,
                'onfailure': onGoogleLogin
            });
        }
        function onGoogleLogin(googleUser) {
            console.log(googleUser.getAuthResponse());
            var id_token = googleUser.getAuthResponse().id_token;
            mobileClient.login('google', { 'id_token': id_token }, false)
                .then(function () {
                    console.log('TODO - could enable/disable functionality etc')
                }, function (error) {
                    console.log(`ERROR: ${error}`);
                });
        };
        function googleSignOut() {
            var auth2 = gapi.auth2.getAuthInstance();
            auth2.signOut().then(function () {
                console.log('User signed out.');
            });
            mobileClient.logout();
        }
        </text>
    }

    var logElement = document.getElementById('log');
    function clearLog() {
        logElement.innerText = '';
    }
    function log(message) {
        logElement.innerText += message + '\r\n';
    }
    function callIsAuthenticated() {
        mobileClient.invokeApi(`${functionAppBaseUrl}api/IsAuthenticated`,
            {
                method: 'GET',
                headers: {
                    'accept': 'application/json',
                    'content-type': 'application/json'
                }
            })
            .then(function (response) {
                log(`Response from IsAuthenticated: ${response.responseText}`);
            }, function (error) {
                log(`Error from IsAuthenticated: ${JSON.stringify(error)}`);
            });
    }
    function callGetClaims() {
        mobileClient.invokeApi(`${functionAppBaseUrl}api/GetClaims`,
            {
                method: 'GET',
                headers: {
                    'accept': 'application/json',
                    'content-type': 'application/json'
                }
            })
            .then(function (response) {
                log(`Response from GetClaims: ${response.responseText}`);
            }, function (error) {
                log(`Error from GetClaims: ${JSON.stringify(error)}`);
            });
    }
    function callGetAuthInfo() {
        mobileClient.invokeApi(`${functionAppBaseUrl}api/GetAuthInfo`,
            {
                method: 'GET',
                headers: {
                    'accept': 'application/json',
                    'content-type': 'application/json'
                }
            })
            .then(function (response) {
                log(`Response from GetAuthInfo: ${response.responseText}`);
            }, function (error) {
                log(`Error from GetAuthInfo: ${JSON.stringify(error)}`);
            });
    }
    function callGetEmail() {
        mobileClient.invokeApi(`${functionAppBaseUrl}api/GetEmailClaim`,
            {
                method: 'GET',
                headers: {
                    'accept': 'application/json',
                    'content-type': 'application/json'
                }
            })
            .then(function (response) {
                log(`Response from GetEmailClaim: ${response.responseText}`);
            }, function (error) {
                log(`Error from GetEmailClaim: ${JSON.stringify(error)}`);
            });
    }
    function callAuthMe() {
        mobileClient.invokeApi(`${functionAppBaseUrl}.auth/me`,
            {
                method: 'GET',
                headers: {
                    'accept': 'application/json',
                    'content-type': 'application/json'
                }
            })
            .then(function (response) {
                log(`Response from .auth/me: ${response.responseText}`);
            }, function (error) {
                log(`Error from .auth/me: ${JSON.stringify(error)}`);
            });
    }
    function callAuthLogout() {
        mobileClient.logout()
            .then(function () {
                log('logged out')
            });
    }

    document.getElementById('clearLog').addEventListener('click', clearLog);
    document.getElementById('testIsAuthenticated').addEventListener('click', callIsAuthenticated);
    document.getElementById('getClaims').addEventListener('click', callGetClaims);
    document.getElementById('getAuthInfo').addEventListener('click', callGetAuthInfo);
    document.getElementById('getEmail').addEventListener('click', callGetEmail);
    document.getElementById('callAuthMe').addEventListener('click', callAuthMe);
    document.getElementById('callAuthLogout').addEventListener('click', callAuthLogout);

</script>
@if (useGoogle)
{
<script src="https://apis.google.com/js/platform.js?onload=renderButton" async defer></script>
}